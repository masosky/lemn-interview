/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Fetch all books (with optional search and pagination) */
        get: operations["GetBooks"];
        put?: never;
        post: operations["CreateBook"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Decimal: string;
        "DefaultSelection_Prisma._36_BookPayload_": {
            /** Format: date-time */
            createdAt: string;
            category: string;
            /** Format: double */
            stock: number;
            price: components["schemas"]["Decimal"];
            author: string;
            title: string;
            id: string;
        };
        /** @description Model Book */
        Book: components["schemas"]["DefaultSelection_Prisma._36_BookPayload_"];
        "ApiResponse_Book-Array_": {
            message?: string;
            data: components["schemas"]["Book"][] | null;
            /** Format: double */
            status: number;
        };
        GenericResponse: {
            message: string;
            /** Format: double */
            status: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetBooks: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Ok */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /** Format: date-time */
                            createdAt: string;
                            category: string;
                            /** Format: double */
                            stock: number;
                            price: components["schemas"]["Decimal"];
                            author: string;
                            title: string;
                            id: string;
                        }[];
                        message: string;
                    };
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericResponse"];
                };
            };
        };
    };
    CreateBook: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Book created successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponse_Book-Array_"];
                };
            };
            /** @description No content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericResponse"];
                };
            };
        };
    };
}
